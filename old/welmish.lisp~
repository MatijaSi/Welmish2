(defpackage welmish
  (:use :cl :io :models))

(in-package welmish)

;; Test
(defvar player (make-instance 'player :x 5 :y 5 :image #\@))
(defvar turn 0)

(with-io ()
  (title-state))

(defun interact-state ()
  (if (control player)
      (exit-state)
      (turn-increment-state)))

(defun turn-increment-state ()
  (incf turn)
  (draw-state))

(defun draw-state ()
  (clear)
  (draw player)
  (draw-string (format nil "Turn: ~A" turn) 0 0)
  (refresh)
  (interact-state))

(defun start-state ()
  (setf turn 0)
  (draw-state))

(defun title-state ()
  (clear)
  (draw-string "Welcome to Welmish Woundikins 2: Welmish Witchings" 0 0)
  (draw-string "Press any key" 0 1)
  (refresh)
  (any-key-phase #'start-state))

(defun any-key-phase (next-phase)
  (get-char)
  (funcall next-phase))

(defun exit-state ()
  (setf turn 0)
  (clear)
  (refresh))
